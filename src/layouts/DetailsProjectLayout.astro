---
import BaseLayout from './BaseLayout.astro'
import SectionProjectLayout from './SectionProjectLayout.astro'
import { Image } from 'astro:assets'
import ButtonProject from '../components/projects/ButtonProject.astro'

const technologies = {
  'angular': '/technologies/angular.svg',
  'astro': '/technologies/astro.svg',
  'docker': '/technologies/docker.svg',
  'figma': '/technologies/figma.svg',
  'git': '/technologies/git.svg',
  'html': '/technologies/html5.svg',
  'javascript': '/technologies/javascript.svg',
  'laravel': '/technologies/laravel.svg',
  'eclipse': '/technologies/eclipseide.svg',
  'css': '/technologies/css.svg',
  'mysql': '/technologies/mysql.svg',
  'mariadb': '/technologies/mariadb.svg',
  'tailwind': '/technologies/tailwindcss.svg',
  'typescript': '/technologies/typescript.svg',
  'ubuntu': '/technologies/ubuntu.svg',
}
const titles = [
  "¿Cuál ha sido el desafío?",
  "Funciones principales",
  "Tecnologías utilizadas"
]
const { frontmatter } = Astro.props
const projectFiles = import.meta.glob('../pages/projects/*.md', { eager: true })
const allProjects = Object.values(projectFiles)
    .map((file: any) => ({
        url: file.url,
        frontmatter: file.frontmatter
    }))
const currentUrl = Astro.url.pathname 
const currentIndex = allProjects.findIndex(project => project.url === currentUrl)
const prevProject = currentIndex > 0 ? allProjects[currentIndex - 1] : null
const nextProject = currentIndex < allProjects.length - 1 ? allProjects[currentIndex + 1] : null
---

<BaseLayout pageTitle={ frontmatter.title }>
  <div class=`pb-4 pt-28 sm:pt-20 w-full flex flex-col gap-4 items-center justify-between justify-self-center`>
    <section class="relative w-full px-4 grid grid-cols-1 justify-items-center items-center gap-4 xl:gap-6 text-justify">
      <h1 class="font-title tracking-widest text-3xl md:text-4xl">
        { frontmatter.title }
      </h1>

      <button class="z-10 md:text-lg rounded-full absolute top-0 left-4 overflow-hidden">
        <a href="/projects" class="grid items-center w-10 h-10 text-white bg-slate-800 dark:bg-gray-700 hover:bg-gray-700 hover:dark:bg-gray-800 
                                  transition duration-300 shadow-lg">
          <i class="bi bi-chevron-left text-3xl"></i>
        </a>
      </button>

      <div class="absolute top-0 right-4 flex flex-col gap-3">
        { frontmatter.github && 
          <a href={ frontmatter.github } 
            target="_blank" 
            rel="noopener noreferrer" 
            class="flex flex-row items-center justify-center sm:justify-start p-2 sm:p-0 sm:py-1 sm:px-2 text-white bg-slate-800 
                  rounded-full shadow-lg transition duration-300 hover:bg-gray-700 focus:outline-none dark:bg-gray-700
                  focus:ring-2 focus:ring-gray-600 focus:ring-opacity-50 hover:dark:bg-gray-800">
              <svg class="w-6 h-6 sm:mr-3" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
                <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.54 5.47 7.61.4.07.55-.17.55-.37 0-.19-.01-.73-.01-1.41-2.22.48-2.68-.64-2.68-.64-.36-.92-.88-1.17-.88-1.17-.72-.49.05-.48.05-.48.8.06 1.23.84 1.23.84.71 1.22 1.87.87 2.32.67.07-.53.28-.87.51-1.07-1.77-.2-3.63-.89-3.63-3.95 0-.87.31-1.58.83-2.13-.08-.2-.36-.99-.14-2.04 0 0 .67-.21 2.19.83.64-.18 1.31-.27 1.98-.27s1.34.1 1.98.27c1.52-1.04 2.19-.83 2.19-.83.22 1.05-.06 1.84-.14 2.04.52.55.83 1.26.83 2.13 0 3.07-1.86 3.75-3.64 3.95.29.25.55.74.55 1.49 0 1.07-.01 1.94-.01 2.21 0 .2.15.45.55.37C13.71 14.54 16 11.54 16 8c0-4.42-3.58-8-8-8z"/>
              </svg>
              <span class="hidden w-full text-center sm:inline font-title tracking-widest text-sm md:text-lg">
                Ir al Repositorio
              </span>
          </a>
        }
        { frontmatter.githubPages && 
          <a href={ frontmatter.githubPages } 
            target="_blank" 
            rel="noopener noreferrer" 
            class="flex flex-row items-center justify-center sm:justify-start p-2 sm:p-0 sm:py-1 sm:px-2 text-white bg-slate-800 
                  rounded-full shadow-lg transition duration-300 hover:bg-gray-700 focus:outline-none dark:bg-gray-700
                  focus:ring-2 focus:ring-gray-600 focus:ring-opacity-50 hover:dark:bg-gray-800">
              <svg class="w-6 h-6 sm:mr-3" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 576 512">
                <path d="M572.52 241.4C518.88 135.06 410.47 64 288 64S57.12 135.06 3.48 241.4a32.35 32.35 0 000 29.2C57.12 376.94 165.53 448 288 448s230.88-71.06 284.52-177.4a32.35 32.35 0 000-29.2zM288 400c-99.72 0-189.26-52.93-237.4-136C98.74 180.93 188.28 128 288 128s189.26 52.93 237.4 136c-48.14 83.07-137.68 136-237.4 136zm0-240a104 104 0 10104 104 104.12 104.12 0 00-104-104zm0 176a72 72 0 1172-72 72.08 72.08 0 01-72 72z"/>
              </svg>
              <span class="hidden w-full text-center sm:inline font-title tracking-widest text-sm md:text-lg">
                Ver preview
              </span>
          </a>
        }
      </div>

      <Image src={ frontmatter.image.src } alt={ frontmatter.title } width=300 height=200 class="w-28 h-28 md:w-40 md:h-40 xl:w-52 xl:h-52 object-contain rounded-full bg-neutral-700/80 shadow shadow-slate-900 dark:shadow-gray-200" />
      
      <div class="w-full grid grid-cols-1 md:grid-cols-2 2xl:grid-cols-3 gap-4 xl:gap-6 md:text-xl">
        <SectionProjectLayout title={ titles[1] } className="bg-gray-300/60 dark:bg-slate-600/60">
          <ul class="font-extrabold pl-4 list-outside list-disc">
            { Object.values(frontmatter.features).map((feature) => (
              <li>{ feature }</li>
            ))}
          </ul>
        </SectionProjectLayout>

        { frontmatter.technologies && 
          <SectionProjectLayout title={ titles[2] } className="bg-gray-300/60 dark:bg-slate-600/60">
            <ul class="w-full h-full grid grid-cols-4 gap-4 justify-between items-center">
              { frontmatter.technologies.map((technology: keyof typeof technologies) => (
                technologies[technology] ? (
                  <li class="grid justify-center">
                    <Image src={ technologies[technology] } alt={ technology } width=50 height=50 class="w-10 h-10 xl:w-14 xl:h-14 p-1 rounded bg-slate-500/30 dark:bg-slate-300" />
                  </li>
                ) : (
                  <li>{ technology }</li>
                )
              ))}
            </ul>
          </SectionProjectLayout>
        }

        <SectionProjectLayout title={ titles[0] } className="sm:col-span-2 2xl:col-span-1 bg-gray-300/60 dark:bg-slate-600/60">
          <ul class="font-extrabold flex flex-col gap-4">
            {Object.values(frontmatter.challenges).map((challenge) => (
              <li>{ challenge }</li>
            ))}
          </ul>
        </SectionProjectLayout>
      </div>
    </section>

    <nav class="w-full max-w-2xl px-4 grid grid-cols-2 gap-4 sm:text-2xl">
      {prevProject && (
        <ButtonProject projectUrl={prevProject.url} nameProject={prevProject.frontmatter.title} reverse=true buttonClass="col-start-1" urlClass="grid-cols-[auto_1fr]" >
          <i class="bi bi-chevron-left"></i>
        </ButtonProject>
      )}
      {nextProject && (
        <ButtonProject projectUrl={nextProject.url} nameProject={nextProject.frontmatter.title} buttonClass="col-start-2" urlClass="grid-cols-[1fr_auto]" >
          <i class="bi bi-chevron-right"></i>
        </ButtonProject>
      )}
    </nav>
  </div>
</BaseLayout>